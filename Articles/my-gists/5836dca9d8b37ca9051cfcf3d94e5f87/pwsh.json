{ 
    "Rename-Path":"Rename-Item -Path A -NewName B -Confirm -Whatif", 
    "Rename-File":"Get-ChildItem FILE | Rename-Item -NewName {$_.Name -replace 'A' 'B'}", 
    "Rename-Folder":"ls | Rename-Item -NewName {$_.Name -replace 'A' 'B'}", 
    "Create-Password":"[System.Web.Security.Membership]::GeneratePassword(8,3)", 
    "Now":"Get-Date -Uformat '%Y%m%d.%H%M%S'", 
    "Timestamp":"[int](Get-Date -Uformat %s)", 
    "Change-Lang-utf8":"chcp 65001", 
    "Change-Lang-shiftjis":"chcp 932", 
    "Execute":"PowerShell -ExecutionPolicy RemoteSigned FILE", 
    "Init-Powershell-Profile":"New-Item -type file -Force $profile", 
    "Open-JsonFile":"Get-Content -Path FILE -Raw -Encoding utf8 | ConvertFrom-Json", 
    "Get-JsonFile":"ls | ConvertTo-Json -Compress | Out-File FILE -Encoding utf8 -Append", 
    "Get-HistoryFile":"(Get-PSReaadlineOption).HistorySavePath", 
    "Edit-Str-Regex":"'ABC'.Replace('A','B') -Replace 'C' 'D'", 
    "Edit-Var-Regex":"[regex]::Replace($s, '_(Â¥s)', {$args.groups[1].value.toupper()})", 
    "Print":"Get-Content FILE | Out-Printer", 
    "wget":"Invoke-WebRequest URL -OutFile FILE", 
    "grep":"Select-String -Path \foo.txt -Pattern \"PATTERN\"", 
    "find -name NAME":"ls -r | where {$_.Name -match \"NAME\"}", 
    "cat":"Get-Content FILE", 
    "sort,uniq":"cat FILE | sort-object | get-uniq", 
    "wc -l":"$(cat FILE).Length", 
    "diff":"Compare-Object $(cat FILE) $(cat FILE2)", 
    "sed":"cat FILE | % { cat $_.FullName }", 
    "tail":"cat FILE -Wait -Tail 5", 
    "curl":"Invoke-RestMethod Uri URL", 
    "unzip":"[System.IO.Compression.Zipfile]::ExtractToDirectory('src', 'dst');", 
    "xargs":"ls PATH | % { cat $_.FullName }", 
    "man":"man Foo-Bar", 
    "streamLoop":" 'a' b' 'c' | % { echo $_ }", 
    "file":"cat FILE | $ { cat $_ }", 
    "Filter-LastModified":"ls | where { ($(Get-Date) - $_.LastWriteTime).Days -lt 30}|where {$_.
    "timer":"$n=3; timeout $($N * 60); shutdown -h", 
    "Math.pow":"1+2+[Math]::Pow(2,10)", 
    "Show-Dirsize":"gci PATH | where { $_.PSIsContainer } | % { Write-Host -NoNewline ($_.Name +
    "Export-History":"Get-History | % {Out-File -InputObject $_.CommandLine -Encoding default -A
    "jq -r '.'":"$obj.psobject.Properties | ForEach-Object { return $_.value }", 
    "jq 'key(.)'":"$obj.psobject.Properties | ForEach-Object { return $_.name }", 
    "Eject":"(New-Object -com WMPlayer.OCX.7).cdromCollection.Item(0).Eject(0)", 
    "Show Alias":"Get-Alias | Where-Object { $_.Definition -eq \"Invoke-WebRequest\" }", 
    "wget":"Invoke-WebRequest |-Uri URL", 
    "which":"(gcm COMMAND).Definiion", 
    "Read-Input":"$str = Read-Host '> '", 
    "Split Huge File":"$i=0; cat FILE -ReadCOunt 1048575 | % { $_ > result$i.csv; $i++ }", 
    "tree -L2":"tree /F | findstr", 
    "Screenshot(require script)":"Take-ScreenShot -screen -file $(Get-Date -format u) -imagetype
 }